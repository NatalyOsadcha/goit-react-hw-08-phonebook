{"version":3,"file":"static/js/871.7087c55a.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/PhonebookForm/PhonebookForm.module.css?56c1","redux/contacts/selectors.js","components/PhonebookForm/PhonebookForm.jsx","webpack://react-homework-template/./src/components/Contacts/ContactsItem.module.css?9e07","components/Contacts/ContactsItem.jsx","components/Contacts/Contacts.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Phonebook.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"PhonebookForm_form__0btgv\",\"label\":\"PhonebookForm_label__a86iP\",\"input\":\"PhonebookForm_input__oekwR\",\"button\":\"PhonebookForm_button__ftF0u\"};","import { createSelector } from \"@reduxjs/toolkit\";\nexport const getItems = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const filterSelector = state => state.filters.filter;\n\nexport const sortContacts = createSelector([getItems], items => {\n    return [...items].sort((a, b) => {\n    return a.name.localeCompare(b.name)\n})\n})\n\n","import React, { useState } from 'react';\nimport css from './PhonebookForm.module.css';\nimport { toast } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { getItems } from 'redux/contacts/selectors';\n\nexport default function PhonebookForm() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getItems)\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (\n    contacts.some(\n      contact =>\n        contact.name.toLowerCase().trim() === name.toLowerCase().trim()\n    )\n  ) {\n    toast.error(`${name} is already in the contacts.`);\n    return;\n  }\n    toast.success(`${name} was added to the contacts successfully.`);\n    dispatch(addContact({name, number}));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label}>Name</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        className={css.input}\n        // pattern=\"^[a-zA-Z][a-zA-Z0-9-_\\.]{1,20}$\"\n        // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={name}\n        onChange={handleChange}\n      />\n\n      <label className={css.label}>Number</label>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        className={css.input}\n        pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        value={number}\n        onChange={handleChange}\n      />\n\n      <button type=\"submit\" className={css.button}>\n        Add contact\n      </button>\n      </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsItem\":\"ContactsItem_contactsItem__5zmD4\",\"span\":\"ContactsItem_span__lUpoW\",\"contactsBtn\":\"ContactsItem_contactsBtn__y8kGL\"};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './ContactsItem.module.css';\nimport TextField from '@mui/material/TextField';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact, editContact} from 'redux/contacts/operations';\nimport { ImBin, ImPencil } from \"react-icons/im\";\nimport { FaSave } from \"react-icons/fa\";\nimport { toast } from 'react-toastify';\n\n\nconst ContactsItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  const [isEdit, setIsEdit] = useState(false);\n  const [name, setName] = useState(contact.name);\n  const [number, setNumber] = useState(contact.number);\n\n  const handleEdit = () => {\n    setIsEdit(prevState => !prevState);\n    if (isEdit) {\n      dispatch(editContact({ name, number, id: contact.id }));\n      toast.success(`Contact ${name} was updated successfully.`);\n    }\n  };\n\n  return (\n    <li className={css.contactsItem}>\n      {isEdit ? (\n        <>\n          <TextField\n            id=\"standard-basic\"\n            label=\"name\"\n            variant=\"standard\"\n            required\n            name=\"name\"\n            value={name}\n            onChange={e => setName(e.target.value)}\n          />\n          <TextField\n            id=\"standard-basic\"\n            label=\"number\"\n            variant=\"standard\"\n            required\n            name=\"name\"\n            value={number}\n            onChange={e => setNumber(e.target.value)}\n          />\n        </>\n      ) : (\n        <>\n          <span className={css.span}>{name}</span> <span className={css.span}>{number}</span>\n        </>\n      )}\n\n      <button type=\"button\" className={css.contactsBtn} onClick={handleEdit}>\n        {isEdit ? <FaSave size={20} />: <ImPencil size={20} />}\n      </button>\n      <button\n        type=\"button\"\n        className={css.contactsBtn}\n        onClick={() => dispatch(deleteContact(contact.id)) && toast.success(`Contact ${name} was deleted successfully.`)}\n      >\n         <ImBin size={20} />\n      </button>\n    </li>\n  );\n};\n\nContactsItem.protoTypes = {\n  contact: PropTypes.objectOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.number.isRequired,\n    }).isRequired\n  ).isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default ContactsItem;\n","import React from 'react';\nimport css from './ContactsItem.module.css';\nimport ContactsItem from './ContactsItem';\nimport {useSelector } from 'react-redux';\nimport {filterSelector, sortContacts } from 'redux/contacts/selectors';\n\nconst Contacts = () => {\n  const filterValue = useSelector(filterSelector);\n  const items = useSelector(sortContacts);\n \n\n  const getFilteredContacts = () => {\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue.toLowerCase().trim())\n    );\n  };\n  const filteredContacts = getFilteredContacts();\n  return (\n    <ul className={css.contactsList}>\n      {filteredContacts.map(contact => (\n        <ContactsItem key={contact.id} contact={contact} />\n      ))}\n    </ul>\n  );\n};\n\nexport default Contacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import React from 'react';\nimport css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/filterSlice';\nimport { filterSelector } from 'redux/contacts/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(filterSelector);\n\n  const changeFilter = evt => {\n    dispatch(filterContacts(evt.target.value));\n  };\n  return (\n    <label className={css.label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={filter}\n        name=\"filter\"\n        onChange={changeFilter}\n        className={css.input}\n      />\n    </label>\n  );\n};\nexport default Filter;\n","import { useEffect } from 'react';\nimport PhonebookForm from '../components/PhonebookForm/PhonebookForm';\nimport Contacts from '../components/Contacts/Contacts';\nimport Filter from '../components/Filter/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { getIsLoading, getError } from 'redux/contacts/selectors';\nimport { LineWave } from 'react-loader-spinner';\n\nconst styles = {\n  container: {\n    minHeight: 'calc(100vh - 50px)',\n    backgroundColor: 'rgba(156, 214, 240, 1)',\n    opacity: 0.6,\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    marginBottom: 15,\n}\n}\n\nexport default function Phonebook() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div style={styles.container}>\n      <h2 style={styles.title}>Add new contact</h2>\n      <PhonebookForm />\n      <h2 style={styles.title}>Contacts</h2>\n      <Filter />\n      {isLoading && <LineWave color=\"blue\" />}\n      {error && <b>{error}</b>}\n      <Contacts />\n      <ToastContainer autoClose={2000} position=\"top-center\" theme=\"dark\"/>\n    </div>\n  );\n}\n"],"names":["getItems","state","contacts","items","getIsLoading","isLoading","getError","error","filterSelector","filters","filter","sortContacts","createSelector","sort","a","b","name","localeCompare","PhonebookForm","dispatch","useDispatch","useState","setName","number","setNumber","useSelector","handleChange","e","currentTarget","value","className","css","onSubmit","preventDefault","some","contact","toLowerCase","trim","toast","addContact","type","required","onChange","pattern","title","ContactsItem","isEdit","setIsEdit","TextField","id","label","variant","target","onClick","prevState","editContact","size","deleteContact","protoTypes","PropTypes","isRequired","filterValue","filteredContacts","includes","map","evt","filterContacts","styles","container","minHeight","backgroundColor","opacity","padding","fontSize","marginBottom","Phonebook","useEffect","fetchContacts","style","color","autoClose","position","theme"],"sourceRoot":""}